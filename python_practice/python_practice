'''
21.How do you calculate the square root of a number in python without using any built in functions.
You can use Addition,division,multiplication,subtraction to achieve the result.
'''
#with using builtin functions
import math
input1=int(input("enter a number:\n"))
print(math.sqrt(input1))
print(pow(input1,0.5))

#without using builtin function
for i in range(1,1000):
    if i*i==input1:
        print(i)
        break
print(input1**0.5)

'''
22.Write program to print multiplication table.
'''
input1=int(input("enter a number"))
for i in range(1,11):
  print(input1,'*',i,'=',i*input1)

'''
23.	Write program to reverse the string [ different options , 
	like using standard function or using loop etc ]
'''

string=input("enter a string")
reverse=''
for char in string:
	reverse=char+reverse
print(reverse)
print(string[-1::-1])

'''
25.	Write program to count the number of occurrences of chars in a string. Example : str ='aabbccc' o/p 2a2b3c
'''
string=input("enter  a string:")
string2=''
for char in string:
  if char not in string2:
    count= string.count(char)
    string2+=str(count)+char
print(string2)

'''
27.	How do you compare two strings and verify if they are anagrams.
'''
string1,string2=input("enter two strings").split(',')
#with builtin function sorted
if sorted(string1)==sorted(string2):
  print("anagram")
else:
  print("not an anagram")

#without builtin function
def isanagram(string1,string2):
  for char in string1:
    if string1.count(char)==string2.count(char):
      pass
    else:
      return"not anagrams"
  return"anagrams"
if len(string1)!=len(string2):
  print("not an anagram:\n")
else:
  print(isanagram(string1,string2))

#using for..else blocks
if len(string1)!=len(string2):
  print("not an anagram:\n")
else:
  for char in string1:
    if string1.count(char)==string2.count(char):
      pass
    else:
      print("not anagrams")
      break
  else:
    print("anagrams")


'''
28.	Check whether a number is Prime or not.if prime display it as prime .if not prime find its prime divisor
'''
number=int(input("enter a number to check whether it is prime or not.."))
count=0
for i in range(1,number+1):
  if number%i==0:
    count+=1
if count==2:
  print("prime")
else:
  print("not a prime")

#without count variable
for i in range(2,number):
  if number%i==0:
    print("not a prime")
    break
else:
  print("prime")



'''
31.Palindrome code
'''
'''palindrome number-if the number is same 
  when it is reversed then it is a palindrome
  '''
number=int(input("enter a number:\n"))
temp=number
rev=0
while(number>0):
  rem=number%10
  rev=(rev*10)+rem
  number=number//10
if temp==rev:
  print("palindrome number")
else:
  print("not a palindrome")


'''palindrome string'''
string=input("enter a string:\n")
string2=''
for char in string:
  string2=char+string2
if string==string2:
  print("palindrome")
else:
  print("not a palindrome")
#slicing
if(string==string[::-1]):
   print("palindrome")
else:
  print("not a palindrome")


'''
32.	Count of both uppercase and lowercase vowels separately in a string
'''

string=input("enter a string with mixed case letters:\n")
lower_count=0
upper_count=0
# for char in string:
#   if ord(char)>=ord('a') and ord(char)<=ord('z'):
#     lower_count+=1
#   elif ord(char)>=ord('A') and ord(char)<=ord('Z'):
#     upper_count+=1
# print("lowercase count:",lower_count)
# print("uppercase count:",upper_count)

for char in string:
  if char.islower():
    lower_count+=1
  elif char.isupper():
    upper_count+=1
print("lowercase count:",lower_count)
print("uppercase count:",upper_count)


'''
33.	Swapping 2 variables without using third variables - 2 methods
'''
#with using thid variable
# var1,var2=input("enter two variables").split(',')
# var3=var2
# var2=var1
# var1=var3
# print("var1,var2:",var1,var2)
#without using third variable
var1=int(input("enter a variable"))
var2=int(input("enter b variable"))
var1=var1+var2
var2=var1-var2
var1=var1-var2
print("var1,var2:",var1,var2)




-------------------------------------------------------------
project Euler
-------------------------------------------------------------
'''
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.
'''
sum=0
for i in range(1,1000):
  if i%3==0 or i%5==0:
    print("i",i)
    sum+=i
print(sum)

----
'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.'''
a=1
b=2
sum=2
while a+b<=4000000:
  i=a+b
  a=b
  b=i
  if i%2==0:
    print(i)
    sum=sum+i
print(sum)
-----
1:For the below binary number , count the Occurrence of sequence '101'

10101010100111101

sol:
string=input("enter the string")
count=0
for i in range(0,len(string)-2):
  if string[i]=='1' :
    if string[i+1]=='0' and string[i+2]=='1':
      count+=1
print(count)